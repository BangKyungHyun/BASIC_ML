import torch
import torch.nn as nn
from matplotlib import pyplot as plt

# Activation Functions
# torch.sort()에 텐서를 입력하면, 정렬된 값과 인덱스를 반환한다.
x = torch.sort(torch.randn(100) * 10)[0]
print('x =', x )

'''
x = tensor([-34.0305, -28.1465, -24.9094, -24.8057, -20.1777, -19.5317, -18.8103,
        -18.5662, -17.9374, -17.5032, -16.6117, -16.0546, -15.6237, -15.1198,
        -12.5458, -11.5646, -10.6515, -10.5015,  -9.4916,  -9.2512,  -9.1125,
         -9.1048,  -8.4616,  -8.3383,  -7.7303,  -7.7045,  -7.4618,  -7.1277,
         -7.0678,  -6.9287,  -6.8736,  -6.8490,  -6.7296,  -6.2486,  -5.5204,
         -5.1755,  -5.0765,  -4.6907,  -4.6394,  -4.4559,  -4.3653,  -4.2745,
         -4.0644,  -3.9043,  -3.7886,  -3.5936,  -2.9114,  -2.8613,  -1.9251,
         -1.6472,  -1.5609,  -0.4638,  -0.1073,   0.4173,   0.4571,   0.6741,
          0.7389,   1.1808,   2.0075,   2.1325,   2.1661,   2.1762,   2.2165,
          2.4360,   2.5216,   2.5443,   2.6714,   3.0874,   3.9177,   4.0193,
          4.5457,   4.6820,   4.7185,   4.7310,   5.0859,   5.3795,   5.8795,
          6.0267,   6.5434,   6.8542,   7.1956,   7.2294,   7.5273,   7.7523,
          7.8403,   8.3585,   8.5200,   8.8977,   9.2603,   9.2675,   9.5122,
          9.9577,  10.2843,  11.0021,  11.2206,  11.7517,  11.7841,  13.5676,
         15.0509,  17.2372])
'''

# Sigmoid
act = nn.Sigmoid()
print('act(x) = ',act(x))

'''
act(x) =  tensor([3.2884e-11, 2.6115e-10, 1.1214e-08, 1.9541e-08, 3.4166e-06, 5.9072e-06,
        7.6512e-06, 1.1122e-05, 1.2506e-05, 2.8593e-05, 1.7858e-04, 1.8158e-04,
        3.2517e-04, 5.0142e-04, 5.3006e-04, 1.0279e-03, 1.5115e-03, 1.5817e-03,
        1.8185e-03, 4.7624e-03, 6.0546e-03, 7.9197e-03, 8.6732e-0 3, 9.4991e-03,
        1.0547e-02, 1.0855e-02, 1.0932e-02, 1.8484e-02, 2.4680e-02, 2.5450e-02,
        3.3478e-02, 3.6501e-02, 4.1781e-02, 5.9791e-02, 7.3186e-02, 7.3344e-02,
        7.4970e-02, 1.0410e-01, 1.3312e-01, 1.6627e-01, 1.7860e-01, 1.8735e-01,
        2.0903e-01, 2.8845e-01, 3.2731e-01, 3.9073e-01, 4.5236e-01, 5.3912e-01,
        5.4629e-01, 5.5518e-01, 5.8406e-01, 6.5213e-01, 7.0659e-01, 7.2508e-01,
        7.6846e-01, 8.0294e-01, 8.5099e-01, 9.1729e-01, 9.4818e-01, 9.5327e-01,
        9.7125e-01, 9.7327e-01, 9.7869e-01, 9.8493e-01, 9.8644e-01, 9.8842e-01,
        9.8880e-01, 9.9558e-01, 9.9659e-01, 9.9712e-01, 9.9793e-01, 9.9830e-01,
        9.9893e-01, 9.9895e-01, 9.9923e-01, 9.9929e-01, 9.9936e-01, 9.9937e-01,
        9.9947e-01, 9.9960e-01, 9.9960e-01, 9.9968e-01, 9.9978e-01, 9.9989e-01,
        9.9990e-01, 9.9991e-01, 9.9992e-01, 9.9993e-01, 9.9994e-01, 9.9997e-01,
        9.9999e-01, 1.0000e+00, 1.0000e+00, 1.0000e+00, 1.0000e+00, 1.0000e+00,
        1.0000e+00, 1.0000e+00, 1.0000e+00, 1.0000e+00])
'''

print('torch.sigmoid(x) = ', torch.sigmoid(x))

'''
torch.sigmoid(x) =  tensor([3.9047e-09, 3.9306e-09, 4.6676e-08, 5.2302e-08, 1.7564e-07, 1.9418e-06,
        2.2244e-06, 6.6510e-06, 8.3015e-06, 1.1935e-05, 1.3431e-05, 2.6041e-05,
        4.5205e-05, 5.6691e-05, 6.8757e-05, 1.3250e-04, 1.3617e-04, 1.5596e-04,
        2.1190e-04, 6.5757e-04, 7.4548e-04, 1.3891e-03, 2.2096e-03, 2.2339e-03,
        2.2826e-03, 2.6000e-03, 2.6899e-03, 4.6163e-03, 5.5533e-03, 1.1749e-02,
        1.6571e-02, 6.7217e-02, 1.2559e-01, 1.6448e-01, 1.9025e-01, 2.0360e-01,
        2.1997e-01, 2.2073e-01, 2.6298e-01, 2.6640e-01, 2.9320e-01, 3.1321e-01,
        3.3453e-01, 3.4788e-01, 4.2643e-01, 4.3365e-01, 4.8985e-01, 4.9451e-01,
        5.3331e-01, 5.3651e-01, 7.2777e-01, 7.5856e-01, 7.7179e-01, 8.7075e-01,
        9.1280e-01, 9.1375e-01, 9.2199e-01, 9.5329e-01, 9.5746e-01, 9.6965e-01,
        9.7744e-01, 9.9183e-01, 9.9310e-01, 9.9326e-01, 9.9685e-01, 9.9837e-01,
        9.9888e-01, 9.9889e-01, 9.9908e-01, 9.9919e-01, 9.9923e-01, 9.9941e-01,
        9.9958e-01, 9.9971e-01, 9.9978e-01, 9.9979e-01, 9.9980e-01, 9.9988e-01,
        9.9994e-01, 9.9995e-01, 9.9998e-01, 9.9998e-01, 9.9998e-01, 9.9999e-01,
        1.0000e+00, 1.0000e+00, 1.0000e+00, 1.0000e+00, 1.0000e+00, 1.0000e+00,
        1.0000e+00, 1.0000e+00, 1.0000e+00, 1.0000e+00, 1.0000e+00, 1.0000e+00,
        1.0000e+00, 1.0000e+00, 1.0000e+00, 1.0000e+00])

'''

plt.plot(x.numpy(), torch.sigmoid(x).numpy())
plt.show()

# Tanh
act = nn.Tanh()
print('act(x) = ',act(x) )
'''
act(x) =  tensor([-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -0.9999, -0.9999, -0.9997, -0.9996, -0.9995, -0.9993, -0.9991,
        -0.9979, -0.9968, -0.9942, -0.9797, -0.9658, -0.9543, -0.9422, -0.9395,
        -0.9389, -0.9300, -0.9142, -0.8954, -0.7045, -0.6618, -0.0962,  0.2504,
         0.4718,  0.7608,  0.7889,  0.8957,  0.9061,  0.9464,  0.9800,  0.9898,
         0.9903,  0.9931,  0.9966,  0.9989,  1.0000,  1.0000,  1.0000,  1.0000,
         1.0000,  1.0000,  1.0000,  1.0000,  1.0000,  1.0000,  1.0000,  1.0000,
         1.0000,  1.0000,  1.0000,  1.0000,  1.0000,  1.0000,  1.0000,  1.0000,
         1.0000,  1.0000,  1.0000,  1.0000,  1.0000,  1.0000,  1.0000,  1.0000,
         1.0000,  1.0000,  1.0000,  1.0000])
'''

plt.plot(x.numpy(), torch.tanh(x).numpy())
plt.show()
